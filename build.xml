<?xml version="1.0" encoding="UTF-8"?>

<project name="testnet" default="build" basedir="./">

    <property file="build.properties" />

    <target name="build" depends="prepare,lint,composer,phploc,pdepend,phpcpd"/>

    <target name="ci" depends="prepare,lint,phploc,pdepend,phpmd,phpcpd,phpcs" />

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${project.basedir}/build/api"/>
        <delete dir="${project.basedir}/build/code-browser"/>
        <delete dir="${project.basedir}/build/coverage"/>
        <delete dir="${project.basedir}/build/logs"/>
        <delete dir="${project.basedir}/build/pdepend"/>
        <delete dir="${project.basedir}/build"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${project.basedir}/build/api"/>
        <mkdir dir="${project.basedir}/build/code-browser"/>
        <mkdir dir="${project.basedir}/build/coverage"/>
        <mkdir dir="${project.basedir}/build/logs"/>
        <mkdir dir="${project.basedir}/build/pdepend"/>
        <mkdir dir="${project.basedir}/build/phpdox"/>
    </target>

    <target name="lint">
        <phplint haltonfailure="true">
            <fileset dir="src/elasticsearch/action">
                <include name="**/*.php"/>
            </fileset>
            <fileset dir="src/elasticsearch/conf">
                <include name="**/*.php"/>
            </fileset>
            <fileset dir="src/elasticsearch/lang">
                <include name="**/*.php"/>
            </fileset>
            <fileset dir="src/elasticsearch/helper">
                <include name="**/*.php"/>
            </fileset>
            <fileset dir="src/elasticsearch">
                <include name="**/*cli*.php"/>
            </fileset>
        </phplint>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg value="--log-csv" />
            <arg value="${project.basedir}/build/logs/phploc.csv" />
            <arg path="${project.basedir}/src" />
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${project.basedir}/build/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${project.basedir}/build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${project.basedir}/build/pdepend/overview-pyramid.svg" />
            <arg path="${project.basedir}/src" />
        </exec>
    </target>

    <target name="phpmd"
            description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpmd">
            <arg path="${project.basedir}/src" />
            <arg value="text" />
            <arg value="${project.basedir}/build/phpmd.xml" />
        </exec>
    </target>

    <target name="phpcs"
            description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpcs">
            <arg value="--standard=${project.basedir}/build/phpcs.xml" />
            <arg path="${project.basedir}/src" />
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd">
            <arg value="--log-pmd" />
            <arg value="${project.basedir}/build/logs/pmd-cpd.xml" />
            <arg path="${project.basedir}/src" />
        </exec>
    </target>

    <target name="composer" description="Updates all dependencies from composer.json">
        <php expression="putenv('COMPOSER_VENDOR_DIR=src/elasticsearch/vendor');" />
        <exec executable="composer">
            <arg value="update" />
        </exec>
    </target>

    <target name="deploy-prod" description="deploys the app into production">
        <scp username="${app.user}" pubkeyfile="/home/jenkins/.ssh/id_rsa.pub" privkeyfile="/home/jenkins/.ssh/id_rsa"
             host="${app.host}" todir="${app.destdir}" level="debug">
            <fileset dir="src/elasticsearch">
                <include name="**/*"/>
            </fileset>
        </scp>
        <scp username="${app.user}" pubkeyfile="/home/jenkins/.ssh/id_rsa.pub" privkeyfile="/home/jenkins/.ssh/id_rsa"
             host="${app.host}" todir="${app.destdir}" level="debug" file="composer.json">
        </scp>
        <ssh username="${app.user}" pubkeyfile="/home/jenkins/.ssh/id_rsa.pub" privkeyfile="/home/jenkins/.ssh/id_rsa"
             host="${app.host}" display="true"
             command="cd ${app.destdir} &amp;&amp; https_proxy=http://http.proxy.kiebackpeter.kup:3128/ http_proxy=http://http.proxy.kiebackpeter.kup:3128/ composer -v update" />
        <ssh username="${app.user}" pubkeyfile="/home/jenkins/.ssh/id_rsa.pub" privkeyfile="/home/jenkins/.ssh/id_rsa"
             host="${app.host}" display="true"
             command="chmod +x ${app.destdir}/index-cli.php" />
    </target>
</project>
